---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/competences":
    get:
      summary: list competences
      tags:
      - Competence API
      responses:
        '200':
          description: competences
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/competence_schema"
    post:
      summary: create competence
      tags:
      - Competence API
      parameters: []
      responses:
        '201':
          description: competence created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/competence_schema"
        '400':
          description: bad request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/bad_request_schema"
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unprocessable_entity_schema"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                competence:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Competence name
                  required:
                  - name
              required:
              - competence
        required: true
  "/api/v1/competences/{id}":
    get:
      summary: show competence
      tags:
      - Competence API
      parameters:
      - name: id
        in: path
        required: true
        description: Competence ID
        schema:
          type: string
      responses:
        '200':
          description: competences
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/competence_schema"
        '404':
          description: not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found_schema"
    put:
      summary: update competence
      tags:
      - Competence API
      parameters:
      - name: id
        in: path
        required: true
        description: Competence ID
        schema:
          type: string
      responses:
        '200':
          description: competence updated
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/competence_schema"
        '404':
          description: not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found_schema"
        '400':
          description: bad request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/bad_request_schema"
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unprocessable_entity_schema"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                competence:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Competence name
                  required:
                  - name
              required:
              - competence
        required: true
    delete:
      summary: delete competence
      tags:
      - Competence API
      parameters:
      - name: id
        in: path
        required: true
        description: Competence ID
        schema:
          type: string
      responses:
        '204':
          description: competence deleted
        '404':
          description: not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found_schema"
  "/api/v1/courses":
    get:
      summary: list courses
      tags:
      - Courses API
      responses:
        '200':
          description: courses
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/course_schema"
    post:
      summary: create course
      tags:
      - Courses API
      security:
      - bearerAuth: []
      parameters:
      - name: Authorization
        in: header
        description: Authorization-Token
        example: Bearer <token>
        required: true
        schema:
          type: string
      responses:
        '201':
          description: course created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/course_schema"
        '400':
          description: bad request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/bad_request_schema"
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unprocessable_entity_schema"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unauthorized_schema"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                course:
                  type: object
                  properties:
                    title:
                      type: string
                      example: Ruby on Rails Basics
                    description:
                      type: string
                      example: A beginner-friendly course on Ruby on Rails.
                    author_id:
                      type: integer
                      example: 1
                    competence_ids:
                      type: array
                      items:
                        type: integer
                      example:
                      - 1
                      - 2
                      description: Array of existing competence IDs to associate with
                        the course
                  required:
                  - title
                  - author_id
        required: true
  "/api/v1/courses/{id}":
    get:
      summary: show course
      tags:
      - Courses API
      parameters:
      - name: id
        in: path
        required: true
        description: Course ID
        schema:
          type: string
      responses:
        '200':
          description: course
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/course_schema"
        '404':
          description: not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found_schema"
    put:
      summary: update course
      tags:
      - Courses API
      security:
      - bearerAuth: []
      parameters:
      - name: Authorization
        in: header
        description: Authorization-Token
        example: Bearer <token>
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: course updated
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/course_schema"
        '404':
          description: not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found_schema"
        '400':
          description: bad request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/bad_request_schema"
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unprocessable_entity_schema"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unauthorized_schema"
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/forbidden_schema"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                course:
                  type: object
                  properties:
                    title:
                      type: string
                      example: New title
                    author_id:
                      type: integer
                      example: 1
                    competence_ids:
                      type: array
                      items:
                        type: integer
                      example:
                      - 1
                      - 2
        required: true
    delete:
      summary: delete course
      tags:
      - Courses API
      security:
      - bearerAuth: []
      parameters:
      - name: Authorization
        in: header
        description: Authorization-Token
        example: Bearer <token>
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: Course ID
        schema:
          type: string
      responses:
        '204':
          description: course deleted
        '404':
          description: not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found_schema"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unauthorized_schema"
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/forbidden_schema"
  "/api/v1/users/{id}":
    delete:
      summary: delete user
      tags:
      - Users API
      parameters:
      - name: id
        in: path
        required: true
        description: User ID
        schema:
          type: string
      responses:
        '204':
          description: user deleted
        '404':
          description: not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found_schema"
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: 127.0.0.1:3000
components:
  schemas:
    course_item_schema:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        author:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
          required:
          - id
          - name
        competences:
          type: array
          items:
            "$ref": "#/components/schemas/competence_item_schema"
      required:
      - id
      - title
      - author
      - competences
    course_schema:
      type: object
      properties:
        data:
          oneOf:
          - type: array
            items:
              "$ref": "#/components/schemas/course_item_schema"
          - "$ref": "#/components/schemas/course_item_schema"
      required:
      - data
    competence_schema:
      type: object
      properties:
        data:
          oneOf:
          - type: array
            items:
              "$ref": "#/components/schemas/competence_item_schema"
          - "$ref": "#/components/schemas/competence_item_schema"
      required:
      - data
    competence_item_schema:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
      required:
      - id
      - name
    bad_request_schema:
      type: object
      properties:
        errors:
          type: object
          properties:
            code:
              type: string
              enum:
              - bad_request
            message:
              type: string
          required:
          - code
          - message
      required:
      - errors
    unprocessable_entity_schema:
      type: object
      properties:
        errors:
          type: object
          properties:
            code:
              type: string
              enum:
              - unprocessable_entity
            message:
              type: string
          required:
          - code
          - message
      required:
      - errors
    not_found_schema:
      type: object
      properties:
        errors:
          type: object
          properties:
            code:
              type: string
              enum:
              - not_found
            message:
              type: string
          required:
          - code
          - message
      required:
      - errors
    unauthorized_schema:
      type: object
      properties:
        errors:
          type: object
          properties:
            code:
              type: string
              enum:
              - unauthorized
            message:
              type: string
          required:
          - code
          - message
      required:
      - errors
    forbidden_schema:
      type: object
      properties:
        errors:
          type: object
          properties:
            code:
              type: string
              enum:
              - forbidden
            message:
              type: string
          required:
          - code
          - message
      required:
      - errors
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
