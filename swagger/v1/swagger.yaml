---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/competences":
    get:
      summary: list competences
      tags:
      - Competence API
      responses:
        '200':
          description: competences
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    oneOf:
                    - type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                        required:
                        - id
                        - name
                    - type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                      required:
                      - id
                      - name
                required:
                - data
    post:
      summary: create competence
      tags:
      - Competence API
      parameters: []
      responses:
        '201':
          description: competence created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    oneOf:
                    - type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                        required:
                        - id
                        - name
                    - type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                      required:
                      - id
                      - name
                required:
                - data
        '400':
          description: bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      code:
                        type: string
                        enum:
                        - bad_request
                      message:
                        type: string
                    required:
                    - code
                    - message
                required:
                - errors
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      code:
                        type: string
                        enum:
                        - unprocessable_entity
                      message:
                        type: string
                    required:
                    - code
                    - message
                required:
                - errors
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                competence:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Competence name
                  required:
                  - name
              required:
              - competence
        required: true
  "/api/v1/competences/{id}":
    get:
      summary: show competence
      tags:
      - Competence API
      parameters:
      - name: id
        in: path
        required: true
        description: Competence ID
        schema:
          type: string
      responses:
        '200':
          description: competences
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    oneOf:
                    - type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                        required:
                        - id
                        - name
                    - type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                      required:
                      - id
                      - name
                required:
                - data
        '404':
          description: not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      code:
                        type: string
                        enum:
                        - not_found
                      message:
                        type: string
                    required:
                    - code
                    - message
                required:
                - errors
    put:
      summary: update competence
      tags:
      - Competence API
      parameters:
      - name: id
        in: path
        required: true
        description: Competence ID
        schema:
          type: string
      responses:
        '200':
          description: competence updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    oneOf:
                    - type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                        required:
                        - id
                        - name
                    - type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                      required:
                      - id
                      - name
                required:
                - data
        '404':
          description: not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      code:
                        type: string
                        enum:
                        - not_found
                      message:
                        type: string
                    required:
                    - code
                    - message
                required:
                - errors
        '400':
          description: bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      code:
                        type: string
                        enum:
                        - bad_request
                      message:
                        type: string
                    required:
                    - code
                    - message
                required:
                - errors
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      code:
                        type: string
                        enum:
                        - unprocessable_entity
                      message:
                        type: string
                    required:
                    - code
                    - message
                required:
                - errors
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                competence:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Competence name
                  required:
                  - name
              required:
              - competence
        required: true
    delete:
      summary: delete competence
      tags:
      - Competence API
      parameters:
      - name: id
        in: path
        required: true
        description: Competence ID
        schema:
          type: string
      responses:
        '204':
          description: competence deleted
        '404':
          description: not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      code:
                        type: string
                        enum:
                        - not_found
                      message:
                        type: string
                    required:
                    - code
                    - message
                required:
                - errors
  "/api/v1/courses":
    get:
      summary: list courses
      tags:
      - Courses API
      responses:
        '200':
          description: courses
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    oneOf:
                    - type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          title:
                            type: string
                          author:
                            type: object
                            properties:
                              id:
                                type: integer
                              name:
                                type: string
                            required:
                            - id
                            - name
                          competences:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                              required:
                              - id
                              - name
                        required:
                        - id
                        - title
                        - author
                        - competences
                    - type: object
                      properties:
                        id:
                          type: integer
                        title:
                          type: string
                        author:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                          required:
                          - id
                          - name
                        competences:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                              name:
                                type: string
                            required:
                            - id
                            - name
                      required:
                      - id
                      - title
                      - author
                      - competences
                required:
                - data
    post:
      summary: create course
      tags:
      - Courses API
      parameters: []
      responses:
        '201':
          description: course created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    oneOf:
                    - type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          title:
                            type: string
                          author:
                            type: object
                            properties:
                              id:
                                type: integer
                              name:
                                type: string
                            required:
                            - id
                            - name
                          competences:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                              required:
                              - id
                              - name
                        required:
                        - id
                        - title
                        - author
                        - competences
                    - type: object
                      properties:
                        id:
                          type: integer
                        title:
                          type: string
                        author:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                          required:
                          - id
                          - name
                        competences:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                              name:
                                type: string
                            required:
                            - id
                            - name
                      required:
                      - id
                      - title
                      - author
                      - competences
                required:
                - data
        '400':
          description: bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      code:
                        type: string
                        enum:
                        - bad_request
                      message:
                        type: string
                    required:
                    - code
                    - message
                required:
                - errors
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      code:
                        type: string
                        enum:
                        - unprocessable_entity
                      message:
                        type: string
                    required:
                    - code
                    - message
                required:
                - errors
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                course:
                  type: object
                  properties:
                    title:
                      type: string
                      example: Ruby on Rails Basics
                    description:
                      type: string
                      example: A beginner-friendly course on Ruby on Rails.
                    author_id:
                      type: integer
                      example: 1
                    competence_ids:
                      type: array
                      items:
                        type: integer
                      example:
                      - 1
                      - 2
                      description: Array of existing competence IDs to associate with
                        the course
                  required:
                  - title
                  - author_id
        required: true
  "/api/v1/courses/{id}":
    get:
      summary: show course
      tags:
      - Courses API
      parameters:
      - name: id
        in: path
        required: true
        description: Course ID
        schema:
          type: string
      responses:
        '200':
          description: course
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    oneOf:
                    - type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          title:
                            type: string
                          author:
                            type: object
                            properties:
                              id:
                                type: integer
                              name:
                                type: string
                            required:
                            - id
                            - name
                          competences:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                              required:
                              - id
                              - name
                        required:
                        - id
                        - title
                        - author
                        - competences
                    - type: object
                      properties:
                        id:
                          type: integer
                        title:
                          type: string
                        author:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                          required:
                          - id
                          - name
                        competences:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                              name:
                                type: string
                            required:
                            - id
                            - name
                      required:
                      - id
                      - title
                      - author
                      - competences
                required:
                - data
        '404':
          description: not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      code:
                        type: string
                        enum:
                        - not_found
                      message:
                        type: string
                    required:
                    - code
                    - message
                required:
                - errors
    put:
      summary: update course
      tags:
      - Courses API
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: course updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    oneOf:
                    - type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          title:
                            type: string
                          author:
                            type: object
                            properties:
                              id:
                                type: integer
                              name:
                                type: string
                            required:
                            - id
                            - name
                          competences:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                              required:
                              - id
                              - name
                        required:
                        - id
                        - title
                        - author
                        - competences
                    - type: object
                      properties:
                        id:
                          type: integer
                        title:
                          type: string
                        author:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                          required:
                          - id
                          - name
                        competences:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                              name:
                                type: string
                            required:
                            - id
                            - name
                      required:
                      - id
                      - title
                      - author
                      - competences
                required:
                - data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                course:
                  type: object
                  properties:
                    title:
                      type: string
                      example: New title
                    author_id:
                      type: integer
                      example: 1
                    competence_ids:
                      type: array
                      items:
                        type: integer
                      example:
                      - 1
                      - 2
        required: true
    delete:
      summary: delete course
      tags:
      - Courses API
      parameters:
      - name: id
        in: path
        required: true
        description: Course ID
        schema:
          type: string
      responses:
        '204':
          description: course deleted
        '404':
          description: not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      code:
                        type: string
                        enum:
                        - not_found
                      message:
                        type: string
                    required:
                    - code
                    - message
                required:
                - errors
  "/api/v1/users/{id}":
    delete:
      summary: delete user
      tags:
      - Users API
      parameters:
      - name: id
        in: path
        required: true
        description: User ID
        schema:
          type: string
      responses:
        '204':
          description: user deleted
        '404':
          description: not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      code:
                        type: string
                        enum:
                        - not_found
                      message:
                        type: string
                    required:
                    - code
                    - message
                required:
                - errors
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: 127.0.0.1:3000
